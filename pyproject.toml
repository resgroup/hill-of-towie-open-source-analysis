[project]
name = "hill-of-towie-open-source-analysis"
dynamic = ["version"]
description = "Project for open analysis of the Hill of Towie SCADA open source dataset"
authors = [
    { name = "Alex Clerc", email = "alex.clerc@res-group.com" }
]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "pandas>=2.2.3",
    "numpy>=2.2.3",
    "scipy>=1.15.2",
    "res-wind-up>=0.1.11",
    "requests>=2.32.3",
]

[dependency-groups]
dev = [
    "pytest>=8.2.2",
    "poethepoet>=0.27.0",
    "ruff>=0.5.0",
    "mypy>=1.10.1",
    "coverage>=7.5.4",
    "deptry>=0.20.0",
    "pandas-stubs>=2.2.2.240603",
    "types-pyyaml>=6.0.12.20241230",
    "scipy-stubs>=1.15.2.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["uplift_analysis"]

[tool.hatch.version]
path = "uplift_analysis/__init__.py"

[tool.ruff]
line-length = 120
target-version = "py312"
show-fixes = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D203",  # `one-blank-line-before-class` conflicts with D211 `blank-line-before-class`
    "D213",  # 'multi-line-summary-second-line' conflicts with D212 'multi-line-summary-starts-with-capital-letter'
    "COM812",  # can conflict with formatter
    "ISC001",  # can conflict with formatter
    "ANN204", # `__init__` doesn't need annotations
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "D100", # Ignore module docstring in tests
    "S101", # Ignore use of `assert` in tests
    "PLR2004", # Magic values allowed in tests
]
"__init__.py" = ["D"]
"uplift_analysis/*.py" = ["N999"]

[tool.mypy]
python_version = 3.12

[[tool.mypy.overrides]]
module = [
    "wind_up.*",
]
ignore_missing_imports = true

[tool.coverage.report]
exclude_lines = ["if __name__ == .__main__.:"]

[tool.poe.tasks]
[tool.poe.tasks.lint]
help = "Runs formater and linter"
sequence = [
    { cmd = "ruff format ." },
    { cmd = "ruff check . --fix" },
    { cmd = "mypy ." },
]

[tool.poe.tasks.lint-check]
help = "Checks using formater and linter"
sequence = [
    { cmd = "ruff format . --check" },
    { cmd = "ruff check ." },
    { cmd = "mypy ." },
]

[tool.poe.tasks.dep-check]
help = "Check dependencies"
shell = "deptry ."

[tool.poe.tasks.all]
help = "Run all required pre-push commands"
sequence = [{ ref = "lint" }, { ref = "dep-check" }]
